/* Soma code #7b * * A simple Soma, with stimulators and synapses. * @author Patrick D. Roberts, Neuro. Sci. Inst. OHSU, 03/04 
 * (Supported in part by NSF-IBN0114558 & NIH-R01-MH60364) *   
*//* The following command loads the standard run library functions into * NEURON.  These library functions are used to initialize the * NERON, begin and end simulations, and plot variables during a * simulation. */// load_proc("nrnmainmenu")xopen("$(NEURONHOME)/lib/hoc/noload.hoc")nrnmainmenu()tstop = 200			/* Sets the time run the simulation */proc init_globals() {		/* Function definition to initialize the global variables *//* membrane defaults */celsius		= 15v_init		= -70		/* initial voltage; v at rest */g_passive	= .0003		/* the standard leak conductance */erev_passive	= -70		/* the leak (K) reversal potential */gnaHH		= .12		/* the Hodgkin-Huxley Na conductance */gkHH		= .036		/* the Hodgkin-Huxley K conductance */glHH		= .0003		/* the Hodgkin-Huxley leak conductance */}
init_globals()		/* Initializes the global variables */

//****** create compartments ********
create preGABAa,preGABAb,POSTforall {  diam=10  L=10  insert pas  g_pas=1/5000  e_pas=-54}//****** insert presynaptic mechanisms ********
access preGABAa		// insert Hodgk-Hux. Na+ and K+ currents for spikesinsert hhek = -90gnabar_hh = gnaHHgkbar_hh = gkHHobjectvar stim2		// insert current injectionpreGABAa stim2 = new IClamp(.5)stim2.del = 20stim2.dur = 2		// 2 ms for single psp, 10 ms for train of pspsstim2.amp = 0.1//---------------------------access preGABAb		// insert Hodgk-Hux. Na+ and K+ currents for spikesinsert hhek = -90gnabar_hh = gnaHHgkbar_hh = gkHHobjectvar stim3		// insert current injectionpreGABAb stim3 = new IClamp(.5)stim3.del = 50stim3.dur = 2		// 2 ms for single psp, 10 ms for train of pspsstim3.amp = 0.1//****** insert GABAa synapse ***********objectvar c2c2 = new GABAa()			// create synapsePOST c2.loc(0.5)			// assign postsynaptic compartment
setpointer c2.pre, preGABAa.v(0.5)	// assign presynaptic compartmentCmax_GABAa	= 1	//	(mM)	 max transmitter concentrationCdur_GABAa	= 1	//	(ms)	 transmitter duration (rising phase)Alpha_GABAa	= 0.5	//	(/ms mM)	 forward (binding) rateBeta_GABAa	= 0.1	//	(/ms)		 backward (unbinding) rateErev_GABAa	= -70	//	(mV)		 reversal potentialPrethresh_GABAa	= 0 	//	(mV)		 voltage level nec for releaseDeadtime_GABAa	= 1	//	(ms)	 mimimum time between release eventsc2.gmax		= 0.001	//	(umho)		 maximum conductance//****** insert GABAab synapse ***********objectvar c3c3 = new GABAb()			// create synapsePOST c3.loc(0.5)			// assign postsynaptic compartment
setpointer c3.pre, preGABAb.v(0.5)	// assign presynaptic compartmentCmax_GABAb	= 1	//	(mM)	 max transmitter concentrationCdur_GABAb	= 1	//	(ms)	 transmitter duration (rising phase)Alpha_GABAb	= 0.5	//	(/ms mM)	 forward (binding) rateBeta_GABAb	= 0.1	//	(/ms)		 backward (unbinding) rateErev_GABAb	= -70	//	(mV)		 reversal potentialPrethresh_GABAb	= 0 	//	(mV)		 voltage level nec for releaseDeadtime_GABAb	= 1	//	(ms)	 mimimum time between release eventsc3.gmax		= 1	//	(umho)		 maximum conductancexopen("05_somaGABA.ses")	/* Open the session file  */