{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww8660\viewh9880\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl408\slmult1\qj\pardirnatural

\f0\fs24 \cf0 Discussion Week 5\
Ryan Spangler\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fi740\sl408\slmult1\qj\pardirnatural
\cf0 1.  Sugarscape, MANTA and EOS are all basically agent based in that the dynamics of the system is not driven from the top down, but emerges from the interactions of the individual units.  I don't see as great a distinction between cellular automata and more complex multi-agent systems, they are actually more of points on a spectrum, a matter of degree.  The main distinction between them is that in cellular automata, the individual agents do not move relative to each other, while in agent based systems the motion of the agents plays a key role in allowing each agent to adjust the locality of its effects, and interact with a variety of other agents.  But they are both defined by their interactions, whether these are static or dynamic.  Even in EOS, which has the most complex individual agents, is defined by its emergent effects, and in that way is not qualitatively different from the others.  I think with all of these, the main dynamics emerges from the way that local interactions create a distributed feedback effect.  By that I mean that, for example in the cellular automata "Life", each cell is basing its next state on the states of the cells around it, but these cells are in the state they are partially due to the state the cell in question had in the last cycle.  In this way, each cells state is feeding back into determining what its next state will be, indirectly through its effect on all of the cells surrounding it.  All of the models in question exhibit this effect, and I would say this is the defining factor in what we find interesting about them.  Whether the cells move or not in relation to one another does not change this implicit feedback dynamics.\
\
2.  A cellular automata is a matrix of cells whose position is fixed in relation to one another.  In some form each cell is defined to have a state and a set of neighbors which, along with its own state, influence the subsequent state the cell will acquire.  When people speak of the various varieties of cellular automata, they are referring to the graph of connections between the cells and the rules that govern the transition from one cell to the next.  When they refer to "1-d", "2-d", "3-d" etc, they are really implying a pattern of connections between the various cells, and that these patterns of connections map nicely to various kinds of geometrical spaces.  But these are by no means the only kinds of connections that could be made, though it could be argued that they do require some kind of consistent pattern to make the results meaningful.  Cellular automata are good for all kinds of things, not least of which a team of researchers has built a turing complete system out of the basic rules of Conway's "Life", which basically means that this cellular automata at least is capable of representing any computable function.  Building logic gates out of a cellular automata could seem unnecessary and wasteful, but just knowing that it can be done captures the flexibility and generality of this form as a valid computational medium in its own right.  \
\
3.  A lot of the attributes listed are related in some way.  Knowledge and belief/knowledge representation is very similar, with the representation supporting the appearance of knowledge and adaptation.  If there is going to be knowledge, there has to be a way to represent it, even if it is an indirect, implicit kind of representation.  Also, in order to infer something, there must be some knowledge to infer from, so I see knowledge as a prerequisite for inference.  Likewise with goals and planning.  If some result is desired, there must be some way to evaluate what the current situation is in order to compare it to the desired situation.  For this reason I believe knowledge representation would be a good basis to start from.  In order to represent things, some kind of internal state must be modified.  The sophistication of the structure of this internal state will inform to a large degree the kinds of things that the model is able to represent, and how it will be able to apply this knowledge to novel situations.  As a basic idea, it would be interesting to keep track of previous interactions with other agents, and whether they were favorable or unfavorable, and having that inform the next interaction, or even two agents comparing their interactions with a third to possibly adjust their opinion.  In order to do this there would have to be a structure, like a hash, that mapped each agents "who" id to a particular value, which could be positive or negative.\
\
4.  There is a happy medium in the size and interconnectivity of a network.  Too few connections, and nothing happens.  Too many, and it is an undifferentiated mass of chaos.  Erdos claims that this tipping point, at least for the minimum, is in a ratio of nodes to edges of 1.  Higher than one, and the network takes off.  This makes sense, if you think of an organization like a business, if everyone had to talk to every other person, a huge amount of effort would be wasted in this intercommunication that would take away from the task at hand.  Too few, and everyone would be stranded and isolated, working in a vacuum.  }